name: Build Android App and Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      working-directory: ./backend
      run: |
        sudo apt-get update && sudo apt-get install -y libpq-dev gcc
        pip install -r requirements.txt

    - name: Run Migrations
      working-directory: ./backend
      run: python manage.py migrate
      env:
        DB_NAME: test_db
        DB_USER: test_user
        DB_PASSWORD: test_password
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DJANGO_SECRET_KEY: 'a-super-secret-key-for-ci'
        DJANGO_DEBUG: 'False'

    - name: Run Django tests
      working-directory: ./backend
      run: python manage.py test
      env:
        DB_NAME: test_db
        DB_USER: test_user
        DB_PASSWORD: test_password
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DJANGO_SECRET_KEY: 'a-super-secret-key-for-ci'
        DJANGO_DEBUG: 'False'

  flutter-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.7.0'

    - name: Clean Flutter project
      working-directory: ./flutter_app
      run: flutter clean

    - name: Install dependencies
      working-directory: ./flutter_app
      run: flutter pub get

    - name: Generate localization files
      working-directory: ./flutter_app
      run: flutter gen-l10n

    - name: Run Flutter tests
      working-directory: ./flutter_app
      run: flutter test

    - name: Build APK
      working-directory: ./flutter_app
      run: flutter build apk --debug
      # Note: Keystore details must be provided as secrets in the GitHub repository settings.
      # Example:
      # env:
      #   KEYSTORE_PATH: ${{ secrets.KEYSTORE_PATH }}
      #   KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      #   KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      #   KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: flutter_app/build/app/outputs/flutter-apk/app-release.apk
